{"version":3,"sources":["config/product.config.js","constants/products.constants.js","utils/common.utils.js","services/Checkout.class.js","config/pricingRules.config.js","utils/pricingRules.utils.js","stateManagment/state.js","reducers/checkout.reducer.js","containers/atoms/Modal/modal.container.js","components/atoms/SummaryList/summaryList.component.js","components/atoms/SummaryDiscountItem/summaryDiscountItem.component.js","containers/atoms/SummaryDiscounts/summaryDiscounts.container.js","components/atoms/svg/close/closeSvg.component.js","components/molecules/ProductModal/productModal.component.js","containers/atoms/ProductModal/productModal.container.js","components/atoms/ProductDetails/productDetails.component.js","components/atoms/QuantityInput/quantityInput.component.js","components/atoms/ProductAmount/productAmount.component.js","components/molecules/ProductItem/productItem.component.js","containers/molecules/ProductList/productList.container.js","components/atoms/MainTitle/mainTitle.component.js","components/molecules/SummaryItems/summaryItems.component.js","components/molecules/ProductsHeader/productsHeader.component.js","components/molecules/SummaryTotal/summaryTotal.component.js","containers/organisms/Main/main.container.js","App.js","serviceWorker.js","index.js"],"names":["productList","thumbnail","img","description","fullDescription","code","price","type","discountOrder","order","less","a","b","Checkout","pricingRules","this","totalWithDiscount","scannedProducts","initScannedProducts","totalWithoutDiscount","totalItems","sort","firstProduct","seconProduct","map","product","clearScannedProduct","productType","newProduct","handleTotalAfterChange","setScannedProduct","quantity","discount","cost","costWithoutDiscount","discountLabel","getDiscountLabel","find","hasProductRule","label","formattedProduct","findProduct","rule","times","index","scan","currentProduct","getScannedProduct","singleDiscount","updatedPrice","updatedProductCost","currentQuantity","Object","keys","productKey","handleTotalAfterChangeByProductKey","items","productquantity","minQuantity","productDiscount","discountByQuantity","productPrice","discountTwoForOne","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","state","action","checkout","costWithDiscount","total","productSelected","payload","modalList","newmodalList","filter","component","Modal","dispatch","ModalContent","className","closeModal","SummaryListComponent","wrapperClassName","listClassName","title","defaultProps","undefined","SummaryDiscountItemComponent","getDiscountString","SummaryDiscountsContainer","currency","scannedProductsKeys","key","CloseSvg","fill","size","width","height","viewBox","d","ProductModalComponent","handleCheckout","src","alt","onClick","ProductModalContainer","event","preventDefault","ProductDetails","onClickDetails","QuantityInput","onChageQuantity","increaseQuantity","decreaseQuantity","onChange","ProductAmount","customClassName","amount","ProductsItemComponent","totalProduct","ProductsListContainer","handleNewQuantity","handleChangeQuantity","newQuantity","Number","target","scanTimes","handleIncreaseQuantity","handleDecreaseQuantity","unscan","handleClickDetails","ProductModal","getTotalProduct","prototype","PropTypes","array","isRequired","MainTitle","SummaryItemsComponent","ProductsHeaderComponent","mainTitle","tableHeadTitles","detailsText","quantityText","priceText","totalText","tableHeadProptypes","shape","string","SummaryTotalComponent","Main","isModalVisible","length","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.380383b5.chunk.js","sourcesContent":["import { TSHIRT, MUG, CAP } from \"../constants/products.constants\";\n\nexport const productList = [\n    {\n        thumbnail: 'shirt.png',\n        img: 'tshirt.jpg',\n        description: 'Shirt',\n        fullDescription: `Why are you going to write down here a Lorem Ipsun when you can actually write something amazing about this T-shirt? Maybe you don't know, but this product is the only one with image.`,\n        code: 'X7R2OPX',\n        price: 20,\n        type: TSHIRT,\n        discountOrder: 2,\n        order: 1,\n    },\n    {\n        thumbnail: 'mug.png',\n        img: '',\n        description: 'Mug',\n        fullDescription: '\"Come on, it is only a mug\", I can read your mind but what if I tell you \"BUY 2 AND GET 1 FOR FREE. Do not miss this uncredible opportunity!!! It has no image, if you wanna see an image go to the t-shirt details',\n        code: 'X2G2OPZ',\n        price: 5,\n        type: MUG,\n        discountOrder: 1,\n        order: 2,\n    },\n    {\n        thumbnail: 'cap.png',\n        img: '',\n        description: 'Cap',\n        fullDescription: 'It is not yellow, nor green nor red, it is our amazing purple cap, with no logo, no brand and no draw. It is looking for a head, what about yours? It has no image, if you wanna see an image go to the t-shirt details',\n        code: 'X3W2OPY',\n        price: 10,\n        type: CAP,\n        discountOrder: null,\n        order: 3,\n    },\n\n    // NOTE If we want to add another product, everything works the same\n    // {\n    //     thumbnail: 'cap.png',\n    //     img: '',\n    //     description: 'This is not a CAP',\n    //     fullDescription: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Dolor sed viverra ipsum nunc aliquet bibendum enim. In massa tempor nec feugiat.',\n    //     code: 'CUSTOM',\n    //     price: 15,\n    //     type: 'CUSTOM',\n    //     discountOrder: null,\n    //     order: 4,\n    // },\n];","export const TSHIRT = 'TSHIRT';\nexport const CAP = 'CAP';\nexport const MUG = 'MUG';","export const isZero = (value) => value === 0;\n\nexport const less = (a, b) => a-b;","import { productList } from \"../config/product.config\";\nimport { less } from \"../utils/common.utils\";\n\nexport class Checkout {\n    constructor(pricingRules = {}) {\n        this.pricingRules = pricingRules;\n        this.productList = productList;\n        this.totalWithDiscount = 0;\n        this.scannedProducts = {};\n        this.initScannedProducts();\n        this.totalWithoutDiscount = 0;\n        this.totalItems = 0;\n    }\n\n    initScannedProducts() {\n        this.productList\n            .sort((firstProduct, seconProduct) =>\n                less(firstProduct.discountOrder, seconProduct.discountOrder))\n            .map(product => this.clearScannedProduct(product.type));\n        return this;\n    }\n\n    getScannedProduct(productType) {\n        return this.scannedProducts[productType];\n    }\n\n    setScannedProduct(productType, newProduct) {\n        this.scannedProducts = {\n            ...this.scannedProducts,\n            [productType]: newProduct\n        }\n        this.handleTotalAfterChange();\n\n        return this;\n    }\n\n    clearScannedProduct(productType) {\n        this.setScannedProduct(productType, {\n            productType,\n            quantity: 0,\n            discount: 0,\n            cost: 0,\n            costWithoutDiscount: 0,\n            discountLabel: this.getDiscountLabel(productType),\n        });\n\n        return this;\n    }\n\n    findProduct(productType) {\n        return this.productList.find((product) => product.type === productType);\n    }\n\n    hasProductRule(productType) {\n        return !!this.pricingRules[productType];\n    }\n\n    getDiscountLabel(productType) {\n        return this.hasProductRule(productType) ?\n            this.pricingRules[productType].label :\n            '';\n    }\n \n    discount(productType, quantity) {\n        const product = this.findProduct(productType);\n        const formattedProduct = { ...product, quantity };\n        const hasRule = this.hasProductRule(productType);\n        const executeRule = () =>  this.pricingRules[productType].rule(formattedProduct);\n        const productDiscount =  hasRule ? executeRule() : 0;\n        return productDiscount;\n    }\n\n    scanTimes(times, productType) {\n        if (times === 0) {\n            this.clearScannedProduct();\n            return this;\n        }\n        \n        for (let index = 0; index < times; index++) {\n            this.scan(productType);\n        }\n\n        return this;\n    }\n\n    scan(productType) {\n        const currentProduct = this.getScannedProduct(productType);\n        const quantity = currentProduct.quantity + 1;\n        const singleDiscount = this.discount(productType, quantity) || 0;\n        const productDiscount = currentProduct.discount;\n        const discount =  productDiscount + singleDiscount;\n        const price = this.findProduct(productType).price;\n        const updatedPrice = price - singleDiscount;\n        const updatedProductCost = currentProduct.cost + updatedPrice;\n\n        this.setScannedProduct(\n            productType,\n            {\n                ...currentProduct,\n                quantity,\n                discount,\n                cost: updatedProductCost,\n                costWithoutDiscount: price * quantity,\n            }\n        );\n\n        return this;\n        // NOTE\n        // \"this\" is the object from I have called this function\n        // checkout.scan(type) -> checkout is \"this\"\n        // if we want to concatenate we have to return \"this\"\n        // checkout.scan(type).scan(type)\n        // checkout.scan(type) will do whatever and return checkout\n        // so we can do another checkout.scan(type)\n    }\n\n    unscan(productType) {\n        const currentProduct = this.getScannedProduct(productType);\n        const currentQuantity = currentProduct.quantity;\n        \n        if (currentQuantity === 0)\n            return;\n        \n        const quantity = currentProduct.quantity - 1;\n        const singleDiscount = this.discount(productType, currentQuantity) || 0;\n        const productDiscount = currentProduct.discount;\n        const discount = productDiscount - singleDiscount;\n        const price = this.findProduct(productType).price;\n        const updatedPrice = price - singleDiscount;\n        const updatedProductCost = currentProduct.cost - updatedPrice;\n\n        this.setScannedProduct(\n            productType,\n            {\n                ...currentProduct,\n                quantity,\n                discount,\n                cost: updatedProductCost,\n                costWithoutDiscount: price * quantity,\n            }\n        );\n\n        return this;\n    }\n\n    handleTotalAfterChange() {\n        this.totalWithDiscount = 0;\n        this.totalWithoutDiscount = 0;\n        this.totalItems = 0;\n\n        const scannedProductsKeys = Object.keys(this.scannedProducts);\n\n        scannedProductsKeys.map(\n            productKey => this.handleTotalAfterChangeByProductKey(productKey)\n        );\n\n        return this;\n    }\n\n    handleTotalAfterChangeByProductKey(productKey) {\n        const product = this.getScannedProduct(productKey);\n        const costWithoutDiscount = product.costWithoutDiscount;\n        const items = product.quantity;\n        this.totalWithDiscount = this.totalWithDiscount + product.cost\n        this.totalWithoutDiscount = this.totalWithoutDiscount + costWithoutDiscount;\n        this.totalItems = this.totalItems + items;\n    }\n\n    total() {\n        return this.totalWithDiscount;\n    }\n\n    // NOTE\n    // this is not javascript way of \n    // js has not yet (they are working on it) private propperties so it makes no sense\n    // get scannedProducts() {\n    //     return this._scannedProducts;\n    // }\n\n    // set scannedProducts(products) {\n    //     this._scannedProducts = products;\n    // }\n}\n","import { TSHIRT, MUG } from \"../constants/products.constants\";\nimport { discountByQuantity, discountTwoForOne } from \"../utils/pricingRules.utils\";\n\nexport const pricingRules = {\n    [TSHIRT]: {\n        rule: ({ quantity }) => discountByQuantity({\n            productquantity: quantity, \n            minQuantity: 3, \n            productDiscount: 1,\n        }),\n        label: 'x3 Shirt offer',\n    },\n    [MUG]: {\n        rule: ({ quantity, price}) => discountTwoForOne({\n            productquantity: quantity,\n            productPrice: price,\n        }) ,\n        label: '2x1 Mug offer'\n    },\n};\n","export const discountByQuantity = ({\n    productquantity,\n    minQuantity,\n    productDiscount,\n}) => {\n    const discount = productquantity < minQuantity ? 0 : productDiscount;\n\n    return productquantity === minQuantity ?\n        discount * minQuantity :\n        discount;\n};\n\nexport const discountTwoForOne = ({\n    productquantity,\n    productPrice,\n}) => {\n    const isDiscountable = productquantity % 2 === 0 && productquantity > 1;\n    const discount = isDiscountable ?  productPrice : 0;\n\n    return discount; \n};","import React, {createContext, useContext, useReducer} from 'react';\nexport const StateContext = createContext();\nexport const StateProvider = ({ reducer, initialState, children }) =>(\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\nexport const useStateValue = () => useContext(StateContext);","export const UPDATE_PRODUCTS = 'UPDATE_PRODUCTS';\nexport const SELECT_PRODUCT = 'SELECT_PRODUCT';\nexport const RESET_SELECT_PRODUCT = 'RESET_SELECT_PRODUCT';\nexport const SET_MODAL_COMPONENT = 'SET_MODAL_COMPONENT';\nexport const CLOSE_MODAL_COMPONENT = 'CLOSE_MODAL_COMPONENT';\n\nexport const reducer = (state, action) => {\n    switch (action.type) {\n        case UPDATE_PRODUCTS:\n            const checkout = state.checkout;\n            return {\n                ...state,\n                costWithoutDiscount: checkout.totalWithoutDiscount,\n                costWithDiscount: checkout.total(),\n                totalItems: checkout.totalItems,\n                scannedProducts: checkout.scannedProducts,\n            };\n            \n        case SELECT_PRODUCT:\n            return {\n                ...state,\n                productSelected: action.payload, \n            };\n            \n        case RESET_SELECT_PRODUCT:\n            return {\n                ...state,\n                productSelected: {}, \n            };\n        \n        case SET_MODAL_COMPONENT:\n            return {\n                ...state,\n                modalList: [\n                    action.payload,\n                    ...state.modalList,\n                ]\n            };\n        \n        case CLOSE_MODAL_COMPONENT:\n            const newmodalList = state.modalList\n                .filter((component) => component !== action.payload);\n            return {\n                ...state,\n                modalList: newmodalList,\n            };\n        \n        default:\n            return state;\n    }\n};","import React from 'react';\n\nimport './modal.css';\n\nimport { useStateValue } from '../../../stateManagment/state';\n\nimport { CLOSE_MODAL_COMPONENT } from '../../../reducers/checkout.reducer';\n\nconst Modal = () => {\n    const [{ modalList }, dispatch] = useStateValue();\n    const ModalContent = modalList[0];\n    \n    const closeModal = () => {\n        dispatch({ type: CLOSE_MODAL_COMPONENT, payload: modalList[0] });\n    }\n\n    return (\n        <div className=\"modal\">\n            <ModalContent closeModal={closeModal} />\n        </div>\n    )\n};\n\nexport default Modal;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SummaryListComponent = ({\n    children,\n    wrapperClassName,\n    listClassName,\n    title,\n}) => (\n    <div className={wrapperClassName}>\n        {title && <h2>{title}</h2>}\n        <ul className={listClassName}>\n            {children}\n        </ul>\n    </div>\n);\n\nexport default SummaryListComponent;\n\nSummaryListComponent.propTypes = {\n    children: PropTypes.node.isRequired,\n    wrapperClassName: PropTypes.string,\n    listClassName: PropTypes.string,\n    title: PropTypes.string,\n};\n\nSummaryListComponent.defaultProps = {\n    wrapperClassName: undefined,\n    listClassName: undefined,\n    title: undefined,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SummaryDiscountItemComponent = ({\n    discountLabel,\n    discount,\n    getDiscountString,\n}) => (\n    <li>\n        <span>{discountLabel}</span><span>{getDiscountString(discount)}</span>\n    </li>\n);\n\nexport default SummaryDiscountItemComponent;\n\nSummaryDiscountItemComponent.propTypes = {\n    discountLabel: PropTypes.string.isRequired,\n    discount: PropTypes.number.isRequired,\n    getDiscountString: PropTypes.func.isRequired,\n};","import React from 'react';\n\nimport { useStateValue } from '../../../stateManagment/state';\n\nimport SummaryListComponent from '../../../components/atoms/SummaryList/summaryList.component';\nimport SummaryDiscountItemComponent from '../../../components/atoms/SummaryDiscountItem/summaryDiscountItem.component';\n\nconst SummaryDiscountsContainer = () => {\n    const [{ scannedProducts }] = useStateValue();\n    const [{ currency }] = useStateValue();\n    const scannedProductsKeys = Object.keys(scannedProducts);\n\n    const getDiscountString = (discount) => {\n        return discount === 0 ?\n            `0${currency}` :\n            `-${discount}${currency}`;\n    }\n\n    return (\n        <SummaryListComponent\n            listClassName=\"summary-discounts\"\n            wrapperClassName=\"wrapper-half border\"\n            title=\"Discounts\"\n        >\n            {\n                scannedProductsKeys\n                    .filter((key) => scannedProducts[key].discountLabel !== '')\n                    .map((key) => (\n                        <SummaryDiscountItemComponent\n                            key={key}\n                            getDiscountString={getDiscountString}\n                            {...scannedProducts[key]}\n                        />\n                    ))\n            }\n        </SummaryListComponent>\n    )\n};\n\nexport default SummaryDiscountsContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CloseSvg = ({ className, fill, size, width, height }) => (\n    <svg width={size || width} height={size || height} viewBox=\"0 0 18 18\" className={className}>\n        <path fill={fill} d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"/>\n    </svg>\n);\n\nexport default CloseSvg;\n\nCloseSvg.propTypes = {\n    className: PropTypes.string,\n    fill: PropTypes.string,\n    size: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number,\n};\n\nCloseSvg.defaultProps = {\n    className: undefined,\n    fill: 'black',\n    size: undefined,\n    width: 18,\n    height: 18,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './productModal.css';\nimport CloseSvgComponent from '../../atoms/svg/close/closeSvg.component';\n\nconst ProductModalComponent = ({\n    img,\n    description,\n    fullDescription,\n    code,\n    price,\n    currency,\n    closeModal,\n    handleCheckout,\n}) => (\n    <div className=\"product-modal\">\n        <section className=\"image-section\">\n            <img src={`img/bonus/${img}`} alt={description} />\n        </section>\n        <aside className=\"description-section\">\n            <header>\n                <div className=\"close-button\" onClick={closeModal}>\n                    <CloseSvgComponent size={24} fill=\"#aaa\" />\n                </div>\n            </header>\n            <main>\n                <ul className=\"title wrapper-half border\">\n                    <li>\n                        <span className=\"highlight-text\">{description}</span>\n                        <span className=\"highlight-text\">\n                            {price}<span className=\"currency\">{currency}</span>\n                        </span>\n                    </li>\n                </ul>\n                <div className=\"description wrapper-half border\">\n                    <p>{fullDescription}</p>\n                </div>\n                <div className=\"code\">\n                    <p className=\"product-code\">Product code {code}</p>\n                </div>\n                <div className=\"description-actions wrapper\">\n                    <button type=\"submit\" onClick={handleCheckout}>Add to cart</button>\n                </div>\n            </main>\n        </aside>\n    </div>\n);\n\nexport default ProductModalComponent;\n\nProductModalComponent.propTypes = {\n    img: PropTypes.string,\n    description: PropTypes.string.isRequired,\n    fullDescription: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    currency: PropTypes.string.isRequired,\n    closeModal: PropTypes.func.isRequired,\n    handleCheckout: PropTypes.func.isRequired,\n};\n\nProductModalComponent.defaultProps = {\n    img: undefined,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useStateValue } from '../../../stateManagment/state';\n\nimport ProductModalComponent from '../../../components/molecules/ProductModal/productModal.component';\n\nimport { RESET_SELECT_PRODUCT, UPDATE_PRODUCTS } from '../../../reducers/checkout.reducer';\n\nconst ProductModalContainer = ({ closeModal }) => {\n    const [{ checkout, currency, productSelected }, dispatch] = useStateValue();\n\n    const handleCloseModal = event => {\n        event.preventDefault();\n        closeModal();\n        dispatch({ type: RESET_SELECT_PRODUCT });\n    }\n    \n    const handleCheckout = event => {\n        event.preventDefault();\n        checkout.scan(productSelected.type)\n        dispatch({ type: UPDATE_PRODUCTS });\n        closeModal();\n        dispatch({ type: RESET_SELECT_PRODUCT })\n    }\n\n    return (\n        <ProductModalComponent\n            closeModal={handleCloseModal}\n            handleCheckout={handleCheckout}\n            currency={currency}\n            img={productSelected.img}\n            description={productSelected.description}\n            fullDescription={productSelected.fullDescription}\n            code={productSelected.code}\n            price={productSelected.price}\n        />\n    );\n};\n\nexport default ProductModalContainer;\n\nProductModalContainer.propTypes = {\n    closeModal: PropTypes.func.isRequired,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './productDetails.css';\n\nconst ProductDetails = ({ thumbnail, description, code, onClickDetails }) => (\n    <div className=\"col-product\" onClick={onClickDetails}>\n        <figure className=\"product-image\">\n            <img src={`img/${thumbnail}`} alt={description} />\n            <div className=\"product-description\">\n                <h1>{description}</h1>\n                <p className=\"product-code\">Product code {code}</p>\n                <p className=\"product-code click-info\">Click for more details</p>\n            </div>\n        </figure>\n    </div>\n);\n\nexport default ProductDetails;\n\nProductDetails.propTypes = {\n    thumbnail: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired,\n    onClickDetails: PropTypes.func.isRequired,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst QuantityInput = ({\n    quantity,\n    onChageQuantity,\n    increaseQuantity,\n    decreaseQuantity,\n}) => (\n    <div className=\"col-quantity\">\n        <button className=\"count\" onClick={decreaseQuantity}>-</button>\n        <input\n            type=\"text\"\n            className=\"product-quantity\"\n            value={quantity}\n            onChange={onChageQuantity}\n        />\n        <button className=\"count\" onClick={increaseQuantity}>+</button>\n    </div>\n);\n\nexport default QuantityInput;\n\nQuantityInput.propTypes = {\n    quantity: PropTypes.number.isRequired,\n    onChageQuantity: PropTypes.func.isRequired,\n    increaseQuantity: PropTypes.func.isRequired,\n    decreaseQuantity: PropTypes.func.isRequired,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProductAmount = ({ customClassName, amount, currency }) => (\n    <div className={customClassName}> \n        <span className=\"product-price\">{amount}</span>\n        <span className=\"product-currency currency\">{currency}</span>\n    </div>\n);\n\nexport default ProductAmount;\n\nProductAmount.propTypes = {\n    customClassName: PropTypes.string,\n    amount: PropTypes.number.isRequired,\n    currency: PropTypes.string.isRequired,\n};\n\nProductAmount.defaultProps = {\n    customClassName: undefined,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ProductDetais from '../../atoms/ProductDetails/productDetails.component';\nimport QuantityInputComponent from '../../atoms/QuantityInput/quantityInput.component';\nimport ProductAmountComponent from '../../atoms/ProductAmount/productAmount.component';\n\nconst ProductsItemComponent = ({\n    price,\n    currency,\n    totalProduct,\n    thumbnail,\n    description,\n    code,\n    onClickDetails,\n    quantity,\n    onChageQuantity,\n    increaseQuantity,\n    decreaseQuantity,\n}) => (\n    <li className=\"product row\">\n        <ProductDetais \n            thumbnail={thumbnail}\n            description={description}\n            code={code}\n            onClickDetails={onClickDetails}\n        />\n        <QuantityInputComponent\n            quantity={quantity}\n            onChageQuantity={onChageQuantity}\n            increaseQuantity={increaseQuantity}\n            decreaseQuantity={decreaseQuantity}\n        />\n        <ProductAmountComponent\n            customClassName=\"col-price\"\n            amount={price}\n            currency={currency}\n        />\n        <ProductAmountComponent\n            customClassName=\"col-total\"\n            amount={totalProduct}\n            currency={currency}\n        />\n    </li>\n);\n\nexport default ProductsItemComponent;\n\nProductsItemComponent.propTypes = {\n    price: PropTypes.number.isRequired,\n    currency: PropTypes.string.isRequired,\n    totalProduct: PropTypes.number.isRequired,\n    thumbnail: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired,\n    onClickDetails: PropTypes.func.isRequired,\n    quantity: PropTypes.number.isRequired,\n    onChageQuantity: PropTypes.func.isRequired,\n    increaseQuantity: PropTypes.func.isRequired,\n    decreaseQuantity: PropTypes.func.isRequired,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useStateValue } from '../../../stateManagment/state';\n\nimport ProductModal from '../../atoms/ProductModal/productModal.container';\n\nimport ProductsItemComponent from '../../../components/molecules/ProductItem/productItem.component';\n\nimport { less } from '../../../utils/common.utils';\n\nimport {\n    SET_MODAL_COMPONENT,\n    SELECT_PRODUCT,\n    UPDATE_PRODUCTS,\n} from '../../../reducers/checkout.reducer';\n\nconst ProductsListContainer = ({ productList }) => {\n    const [{ currency, checkout, scannedProducts }, dispatch] = useStateValue();\n\n    const handleNewQuantity = () => {\n        dispatch({ type: UPDATE_PRODUCTS });\n    }\n\n    const handleChangeQuantity = type => event => {\n        event.preventDefault();\n        const newQuantity = Number(event.target.value);\n        checkout.clearScannedProduct(type);\n        checkout.scanTimes(newQuantity, type);\n        handleNewQuantity();\n    }\n\n    const handleIncreaseQuantity = type => event => {\n        event.preventDefault();\n        checkout.scan(type);\n        handleNewQuantity();\n    }\n    \n    const handleDecreaseQuantity = type => event => {\n        event.preventDefault();\n        if (event.target.value === 0)\n            return;\n        checkout.unscan(type);\n        handleNewQuantity();\n    }\n\n    const handleClickDetails = product => event => {\n        event.preventDefault()\n        dispatch({ type: SELECT_PRODUCT, payload: product });\n        dispatch({ type: SET_MODAL_COMPONENT, payload: ProductModal });\n    }\n\n    const getTotalProduct = (type) => scannedProducts[type].costWithoutDiscount;\n    const getQuantity = (type) => scannedProducts[type].quantity;\n\n    return (\n        <ul className=\"products-list\">\n            {\n                productList\n                    .sort((firstProduct, seconProduct) =>\n                        less(firstProduct.order, seconProduct.order))\n                    .map((product) => (\n                        <ProductsItemComponent \n                            key={product.code}\n                            thumbnail={product.thumbnail}\n                            description={product.description}\n                            code={product.code}\n                            price={product.price}\n                            currency={currency}\n                            quantity={getQuantity(product.type)}\n                            totalProduct={getTotalProduct(product.type)}\n                            onChageQuantity={handleChangeQuantity(product.type)}\n                            increaseQuantity={handleIncreaseQuantity(product.type)}\n                            decreaseQuantity={handleDecreaseQuantity(product.type)}\n                            onClickDetails={handleClickDetails(product)}\n                        />\n                    ))\n            }\n        </ul>\n    );\n};\n\nexport default ProductsListContainer;\n\nProductsListContainer.prototype = {\n    productList: PropTypes.array.isRequired,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MainTitle = ({ children }) => <h1 className=\"main\">{children}</h1>;\n\nexport default MainTitle;\n\nMainTitle.propTypes = { children: PropTypes.node.isRequired };","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SummaryListComponent from '../../atoms/SummaryList/summaryList.component';\n\nconst SummaryItemsComponent = ({ costWithoutDiscount, totalItems, currency }) => (\n    <SummaryListComponent\n        listClassName=\"summary-items\"\n        wrapperClassName=\"wrapper border\"\n    >\n        <li>\n            <span className=\"summary-items-number\">{totalItems} Items</span>\n            <span className=\"summary-items-price\">\n                {costWithoutDiscount} <span className=\"currency\">{currency}</span>\n            </span>\n        </li>\n    </SummaryListComponent>\n);\n\nexport default SummaryItemsComponent;\n\nSummaryItemsComponent.propTypes = {\n    costWithoutDiscount: PropTypes.number.isRequired,\n    totalItems: PropTypes.number.isRequired,\n    currency: PropTypes.string.isRequired,\n};","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MainTitleComponent from '../../atoms/MainTitle/mainTitle.component';\n\nconst ProductsHeaderComponent = ({\n    mainTitle,\n    tableHeadTitles: { detailsText, quantityText, priceText, totalText },\n}) => (\n    <Fragment>\n        <MainTitleComponent>{mainTitle}</MainTitleComponent>\n        <ul className=\"products-list tableHead\">\n            <li className=\"products-list-title row\">\n                <div className=\"col-product\">{detailsText}</div>\n                <div className=\"col-quantity\">{quantityText}</div>\n                <div className=\"col-price\">{priceText}</div>\n                <div className=\"col-total\">{totalText}</div>\n            </li>\n        </ul>\n    </Fragment>\n);\n\nexport default ProductsHeaderComponent;\n\nconst tableHeadProptypes = PropTypes.shape({\n    detailsText: PropTypes.string.isRequired,\n    quantityText: PropTypes.string.isRequired,\n    priceText: PropTypes.string.isRequired,\n    totalText: PropTypes.string.isRequired,\n});\n\nProductsHeaderComponent.prototype = {\n    mainTitle: PropTypes.string.isRequired,\n    tableHeadTitles: tableHeadProptypes.isRequired,\n}","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SummaryListComponent from '../../atoms/SummaryList/summaryList.component';\n\nconst SummaryTotalComponent = ({ costWithDiscount, currency }) => (\n    <Fragment>\n        <SummaryListComponent\n            wrapperClassName=\"summary-total border\"\n        >\n            <li>\n                <span className=\"summary-total-cost\">Total cost</span>\n                <span className=\"summary-total-price\">{costWithDiscount}{currency}</span>\n            </li>\n        </SummaryListComponent>\n        <button type=\"submit\">Checkout</button>\n    </Fragment>\n);\n\nexport default SummaryTotalComponent;\n\nSummaryTotalComponent.propTypes = {\n    costWithDiscount: PropTypes.number.isRequired,\n    currency: PropTypes.string.isRequired,\n};","import React from 'react';\nimport Modal from '../../atoms/Modal/modal.container';\n\nimport { useStateValue } from '../../../stateManagment/state';\n\nimport SummaryDiscounts from '../../atoms/SummaryDiscounts/summaryDiscounts.container';\nimport ProductsList from '../../molecules/ProductList/productList.container';\n\nimport MainTitleComponent from '../../../components/atoms/MainTitle/mainTitle.component';\nimport SummaryItemsComponent from '../../../components/molecules/SummaryItems/summaryItems.component';\nimport ProductsHeaderComponent from '../../../components/molecules/ProductsHeader/productsHeader.component';\nimport SummaryTotalComponent from '../../../components/molecules/SummaryTotal/summaryTotal.component';\n\nconst Main = () => {\n    const [{\n        modalList,\n        productList,\n        costWithoutDiscount,\n        costWithDiscount,\n        totalItems,\n        currency\n    }] = useStateValue();\n    const isModalVisible = !!modalList.length;\n\n    const productsMainTitle = 'Shopping cart';\n    const productsHeadTitles = {\n        detailsText: 'Product details',\n        quantityText: 'Quantity',\n        priceText: 'price',\n        totalText: 'total',\n    };\n\n    return (\n        <main className=\"App\">\n            <section className=\"products\">\n                <ProductsHeaderComponent\n                    mainTitle={productsMainTitle}\n                    tableHeadTitles={productsHeadTitles}\n                />\n                <ProductsList productList={productList} />\n            </section>\n            <aside className=\"summary\">\n                <MainTitleComponent>Order Summary</MainTitleComponent>\n                <SummaryItemsComponent\n                    costWithoutDiscount={costWithoutDiscount}\n                    totalItems={totalItems}\n                    currency={currency}\n                />\n                <SummaryDiscounts />\n                <SummaryTotalComponent\n                    costWithDiscount={costWithDiscount}\n                    currency={currency}\n                />\n            </aside>\n            {isModalVisible && <Modal />}\n        </main>\n    );\n}\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\n\nimport { Checkout } from './services/Checkout.class';\nimport { pricingRules } from './config/pricingRules.config';\nimport { StateProvider } from './stateManagment/state';\nimport Main from './containers/organisms/Main/main.container';\nimport { reducer } from './reducers/checkout.reducer';\n\nconst checkout = new Checkout(pricingRules);\n\nfunction App() {\n  const initialState = {\n    checkout,\n    productList: checkout.productList,\n    costWithoutDiscount: 0,\n    costWithDiscount: 0,\n    totalItems: 0,\n    currency: '€',\n    scannedProducts: checkout.scannedProducts,\n    modalList: [],\n    productSelected: {},\n  };\n\n  return (\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <Main />\n    </StateProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}